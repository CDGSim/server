#extend("master"):
    #export("title"): #(log.properties.name) #endexport
    #export("main"):
#extend("simulation-properties"):
    #export("tools"):
        
    #if(showDECORButton == true):
    <button onclick="sendParametersToDecor()" />Envoyer vers DECOR</button>
 <script>
            const sendParametersToDecor = async () => {
                    const date = new Date('#date(simulation_properties.start_date)')
                    let data = {
                    metar: "#(simulation_properties.metar)",
                    configuration: "#lowercased(simulation_properties.configuration)",
                    date: date.toISOString().split('.')[0]+"Z",
                    }
                    console.log(date.toISOString())
                  const response = await fetch('/api/setup-decor', {
                    method: 'POST',
                    body: JSON.stringify(data),
                    headers: {
                      'Content-Type': 'application/json'
                    }
                  });
                  const json = await response.json();
                }
            </script>
            #endif
             #endexport
#endextend
            <div id="content">
            <div class="container">
                <div class="title">
                    <h1>Log instructeur</h1>
                    <div class="dropdown">
                          <h2 class="dropbutton" onclick="">Rôles PER</h2>
                          <div class="dropdown-content">
                              <ul>
                                #for(pilotLog in log.pilot_logs):
                                <li><a href="/pilote/#(pilotLog.role)/#(path)">#(pilotLog.role)</a><li>
                                #endfor
                                </ul>
                          </div>
                    </div>
                </div>
                
                <script>
                function displayTab(evt, tabName) {
                  var i;
                  var x = document.getElementsByClassName("tab");
                  for (i = 0; i < x.length; i++) {
                    x[i].style.display = "none";
                  }
                  document.getElementById(tabName).style.display = "block";
                  
                  var tablinks = document.getElementsByClassName("tablink");
                  for (i = 0; i < x.length; i++) {
                     tablinks[i].className = tablinks[i].className.replace(" current", "");
                  }
                  evt.currentTarget.className += " current";
                }
                </script>
                
                <ul class="tabButton">
                    <li onclick="displayTab(event, 'overview')" class="tablink current">Général</li>
                    <li onclick="displayTab(event, 'setup')" class="tablink">Mise en place</li>
                    <li onclick="displayTab(event, 'progress')" class="tablink">Déroulement</li>
                    #if(attachments): #if(count(attachments) > 0):<li onclick="displayTab(event, 'attachments')" class="tablink">Pièces jointes</li>#endif#endif
                    #if(count(timelinesGroups) > 0):<li onclick="displayTab(event, 'timelines')" class="tablink">Timelines</li>#endif
                    #if(courseNotes != ""):<li onclick="displayTab(event, 'notes')" class="tablink">Notes</li>#endif
                </ul>
                
                <div id="overview" class="tab">
                
                    #if(log.properties.assignments):
                        <h2>Positions de contrôle</h2>
                    <table class="assignments">
                        <thead>
                            <tr>
                                #for(assignment in assignments):
                                <th><strong>#(assignment.positionsDescription)</strong></th>
                                #endfor
                            </tr>
                        </thead>
                        <tr>
                            #for(assignment in log.properties.assignments):
                            <td>#(assignment.controller)</td>
                            #endfor
                        </tr>
                    </table>
                    #endif
                                                
                    <h2>Objectifs</h2>
                    #markdown(log.properties.objectives)
                </div>
                
                <div id="timelines" class="tab" style="display:none">
                    #for(timelineGroup in timelinesGroups):
                    <h2>#(timelineGroup.name)</h2>
                    <div class="timelines">
                        #for(timeline in timelineGroup.timelines):
                        <div class="timeline-container">
                            <div style="position:relative;height:#(timeline.length)px;left:6px;">
                                <div class="timeline-runway">#(timeline.runwayName)</div>
                                #for(label in timeline.labels):
                                <div class="timeline-label" style="bottom:#(label.y)px;">
                                    <div style="width:4px">-</div>
                                    <div style="flex-grow:1">
                                        <p>#if(label.minutes % 5 == 0):<span class="timeline-hour">#if(label.hours < 10):0#endif#(label.hours)</span> <span class="timeline-minute">#if(label.minutes < 10):0#endif#(label.minutes)</span>#else:&nbsp;#endif</p>
                                    </div>
                                    <div style="width:4px">-</div>
                                </div>
                            #endfor
                            </div>
                            <div style="position:relative;height:#(timeline.length)px;left:70px;">
                                #for(flight in timeline.flights):
                                <div class="timeline-flight" style="bottom:#(flight.y)px;color:white">
                                    <div class="timeline-flight-time">
                                        #(flight.estimate)
                                    </div>
                                    <div class="timeline-flight-callsign">
                                        #(flight.callsign)
                                    </div>
                                    <div class="timeline-flight-iaf timeline-color-#(timeline.colorClass)">
                                        #(flight.IAF)
                                    </div>
                                    <div class="timeline-flight-iaf-estimate timeline-color-#(timeline.colorClass)">
                                        #(flight.IAFestimate)
                                    </div>
                                    <div class="timeline-flight-aircratType">
                                        #(flight.aircraftType)
                                    </div>
                                </div>
                                #endfor
                            </div>
                        </div>
                        #endfor
                    </div>
                    #endfor
                </div>
                
                <div id="setup" class="tab" style="display:none">
                    <h2>Situation initiale</h2>
                    #markdown(log.instructor_log.setup_info)
                    
                    <table>
                        <thead>
                            <tr>
                                <th>Position</th>
                                <th>Indicatif</th>
                                <th>Consignes</th>
                            </tr>
                        </thead>
                        #for(pilot_log in log.pilot_logs):
                            #if(pilot_log.setup):
                                #if(pilot_log.role != "Adjacent"):
                                <tbody>
                                    #for(setup in pilot_log.setup):
                                    <tr>
                                        #if(isFirst):<td rowspan="#count(pilot_log.setup)" style="vertical-align:middle">#(pilot_log.role)</td>#endif
                                        <td>#(setup.callsign)</td>
                                        <td>#markdown(setup.description)</td>
                                    </tr>
                                    #endfor
                                </tbody>
                                #endif
                            #endif
                        #endfor
                    </table>

                </div>
                      
                <div id="progress" class="tab" style="display:none">
                    
                    #if(count(reroutedFlightsToNorthRunways) + count(reroutedFlightsToSouthRunways) > 0):
                    <h2>Rerouting</h2>
                    <p>Plusieurs croisements : faire les modifications suivantes sur AMAN (après avoir pris les droits et vérifié la conf)</p>
                    <div class="rerouting">
                        #if(count(reroutedFlightsToNorthRunways) > 0):
                        <div>
                            <p>Vols à rerouter au Nord :</p>
                            <ul>
                                #for(reroutedFlight in reroutedFlightsToNorthRunways):
                                <li>#(reroutedFlight.callsign)</li>
                                #endfor
                            </ul>
                        </div>
                        #endif
                        #if(count(reroutedFlightsToSouthRunways) > 0):
                        <div>
                            <p>Vols à rerouter au Sud :</p>
                            <ul>
                                #for(reroutedFlight in reroutedFlightsToSouthRunways):
                                <li>#(reroutedFlight.callsign)</li>
                                #endfor
                            </ul>
                        </div>
                        #endif
                    </div>
                    #endif
                                                       
                                        
                    <h2>Déroulement</h2>
                    #if(log.instructor_log.events):
                    #if(count(log.instructor_log.events) > 0):
                                    
                    <div class="event-row event-header">
                        <div class="event-time">Heure</div>
                        #if(displayEventsLocation):<div>Position</div>#endif
                        <div class="event-callsign">Indicatif</div>
                        <div>Évènement</div>
                    </div>
                    <div class="events">
                        #for(event in log.instructor_log.events):
                        <div class="event-row">
                            <div class="event-time"><p>#(event.time)</p></div>
                            #if(displayEventsLocation):<div class="event-location"><p>#if(event.location):#markdown(event.location)#endif</p></div>#endif
                            <div class="event-callsign"><p>#(event.callsign)</p></div>
                            <div>#markdown(event.description)</div>
                        </div>
                        #endfor
                    </div>
                    #else:
                    Aucun évènement particulier
                    #endif
                    #else:
                    Aucun évènement particulier
                    #endif
                </div>
            
                #if(attachments):
                    #if(count(attachments) > 0):
            <div id="attachments" class="tab" style="display:none">
                    <h2>Pièces jointes</h2>
                    <ul>
                    #for(attachment in attachments):
                        <li><a href="/attachment/#(attachment.url)">#(attachment.name)</a></li>
                    #endfor
                    </ul>
            </div>
                    #endif
                #endif
        #if(courseNotes != ""):
                <div id="notes" class="tab" style="display:none">
        <h2>Notes importantes</h2>
<div class="course_notes">
#markdown(courseNotes)
</div>
        #endif
        </div>
        </div>
        </div>
            
#endexport
#endextend
